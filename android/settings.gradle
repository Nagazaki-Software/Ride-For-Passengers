// android/settings.gradle

pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()
    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        // Repositórios do Flutter
        maven { url "${flutterSdkPath}/bin/cache/artifacts/engine" }
        maven { url "https://storage.googleapis.com/download.flutter.io" }
        // ⚠️ Não precisa Transistorsoft aqui
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.7.3" apply false
    id "org.jetbrains.kotlin.android" version "2.1.0" apply false
    id "com.google.gms.google-services" version "4.3.8" apply false
}

dependencyResolutionManagement {
    // Deixe o settings mandar (sem quebrar por subprojetos que declaram repos)
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        // Repos do Flutter
        maven { url "${flutterSdkPath}/bin/cache/artifacts/engine" }
        maven { url "https://storage.googleapis.com/download.flutter.io" }

        // Transistorsoft SOMENTE para com.transistorsoft, com fallback /maven2
        exclusiveContent {
            forRepository {
                maven { url "https://maven.transistorsoft.com" }
                maven { url "https://maven.transistorsoft.com/maven2" }
            }
            filter {
                includeGroup "com.transistorsoft"
            }
        }
    }
}

include ":app"
