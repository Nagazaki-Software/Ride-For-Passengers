plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.quicky.ridebahamas"
    compileSdkVersion 35

    defaultConfig {
        applicationId "com.quicky.ridebahamas"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            // nada especial aqui
        }
        release {
            // **ASSINE com o release**, não com o debug:
            signingConfig signingConfigs.release

            // Para testar o Maps sem o R8 atrapalhar, comece assim:
            minifyEnabled false
            shrinkResources false

            // Depois que tudo funcionar, você pode reativar:
            // minifyEnabled true
            // shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'

    // Deixe o plugin do Kotlin gerenciar a stdlib. Remova versão fixa 2.1.0 (pode conflitar):
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.1.0"

    implementation 'io.card:android-sdk:5.5.1'

    // Use o BoM do Play Services pra manter versões coerentes
    implementation platform('com.google.android.gms:play-services-bom:16.1.0')
    implementation 'com.google.android.gms:play-services-maps'
    implementation 'com.google.android.gms:play-services-location'
}
