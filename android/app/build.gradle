plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.quicky.ridebahamas"
    compileSdkVersion 35

    defaultConfig {
        applicationId "com.quicky.ridebahamas"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        // ðŸ”½ðŸ”½ðŸ”½ AQUI RESOLVEMOS O ERRO DO PLACEHOLDER
        def mapsApiKey = project.findProperty("MAPS_API_KEY")
                ?: System.getenv("MAPS_API_KEY") ?: ""

        manifestPlaceholders = [
                // O plugin do Flutter costuma preencher isso, mas em alguns ambientes nÃ£o rola.
                // Esses valores funcionam bem com a Embedding v2.
                applicationName: "io.flutter.app.FlutterApplication",
                MAPS_API_KEY  : mapsApiKey
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            // nada especial aqui
        }
        release {
            // **ASSINE com o release**, nÃ£o com o debug:
            signingConfig signingConfigs.release

            // Para testar o Maps sem o R8 atrapalhar, comece assim:
            minifyEnabled false
            shrinkResources false

            // Depois que tudo funcionar, vocÃª pode reativar:
            // minifyEnabled true
            // shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                          'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation 'io.card:android-sdk:5.5.1'
    // Splash oficial do Android 12+
    implementation "androidx.core:core-splashscreen:1.0.1"

    // Material + AppCompat para garantir os temas Material3/AppCompat disponÃ­veis
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.appcompat:appcompat:1.7.0"

    // Google Play services (sem BoM)
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation "com.google.android.gms:play-services-maps:18.2.0"
    implementation "com.google.android.gms:play-services-base:18.5.0"

    // Se realmente precisar do Location aqui (senÃ£o deixe que os plugins tragam):
    implementation 'com.google.android.gms:play-services-location:21.2.0'
}

